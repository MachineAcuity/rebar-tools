---
- name: (rebar-web-instance deploy) Create deploy directory in tools/deployment
  file:
    path: "/home/ubuntu/{{ rebar_appgroup }}/{{ rebar_instance }}/"
    state: directory
    force: yes

- name: (rebar-web-instance deploy) rsync with web server
  synchronize:
    src: "{{ rebar_home }}/tools/deployment/{{ rebar_instance }}/deployment/"
    dest: "/home/ubuntu/{{ rebar_appgroup }}/{{ rebar_instance }}/"
    delete: yes
    recursive: yes
    rsync_opts:
      - "--no-motd"
      - "--exclude=node_modules"
      - "--exclude=.env"
      - "--exclude=pm2.json"
      - "--exclude=publicURL.js"

- name: (rebar-web-instance deploy) Upload env
  template:
    src: ".env.j2"
    dest: "/home/ubuntu/{{ rebar_appgroup }}/{{ rebar_instance }}/.env"

- name: (rebar-web-instance deploy) Upload pm2.json
  template:
    src: "pm2.json.j2"
    dest: "/home/ubuntu/{{ rebar_appgroup }}/{{ rebar_instance }}/pm2.json"

- name: (rebar-web-instance deploy) Upload publicURL.js
  template:
    src: "publicURL.js.j2"
    dest: "/home/ubuntu/{{ rebar_appgroup }}/{{ rebar_instance }}/configuration/app/publicURL.js"

- name: (rebar-web-instance deploy) Change owner to ubuntu
  shell: |
    chown -R ubuntu:ubuntu /home/ubuntu/{{ rebar_appgroup }}/{{ rebar_instance }}/

- name: (ZZZ) stop cassandra
  systemd:
    name: cassandra
    state: stopped

- name: (rebar-web-instance deploy) yarn
  command: "/usr/local/lib/npm/bin/yarn"
  become: yes
  become_user: ubuntu
  args:
    chdir: "/home/ubuntu/{{ rebar_appgroup }}/{{ rebar_instance }}/"

- name: (ZZZ) start cassandra
  systemd:
    name: cassandra
    state: started
- name: (ZZZ) wait for cassandra to warm up
  pause:
    seconds: 20

- name: (rebar-web-instance deploy) Setup database - perform migrations
  become: yes
  become_user: ubuntu
  shell: |
    export NODE_ENV=development && cd /home/ubuntu/{{ rebar_appgroup }}/{{ rebar_instance }} && node scripts/setup-database
